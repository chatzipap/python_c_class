# Επίλυση Δραστηριοτήτων του μαθήματος Προγραμματισμός Υπολογιστών
# Γ' ΕΠΑΛ
# ΤΟΜΕΑΣ ΠΛΗΡΟΦΟΡΙΚΗΣ
# worked with Python 2.7.10
# @TasosChatz

'''

ΚΕΦΑΛΑΙΟ 5ο ΚΛΑΣΣΙΚΟΙ ΑΛΓΟΡΙΘΜΟΙ
Δραστηριότητα 7 / σελίδα 89
Ας υποθέσουμε ότι σας δίνεται μια λίστα στην Python η οποία περιέχει λογικές τιμές
True/False εναλλάξ. Επίσης, το πλήθος των True είναι ίσο με το πλήθος των False.
Να γράψετε αλγόριθμο, σε Python, ο οποίος δεδομένης της παραπάνω δομής της
λίστας, θα τοποθετεί τα True πριν από τα False εκτελώντας, τις λιγότερες δυνατές
μετακινήσεις. Δεν επιτρέπεται να κάνετε καμία σύγκριση ούτε να χρησιμοποιήσετε
τη δομή if. Θεωρήστε ότι το πρώτο στοιχείο της λίστας έχει την τιμή True.          

'''

# Δεδομένα δοκιμών
aList = [True, False, True, False, True, False, True, False,
         True, False, True, False, True, False, True, False, True, False,
         True, False, True, False, True, False, True, False, True, False]

# Διάταξε τις λογικές τιμές με αμοιβαίες αντιμεταθέσεις
def orderBoolean(aList):
    n = len(aList)
    mid = n // 2
    for i in range(1, mid, 2) :
        aList[i], aList[n-i-1] = aList[n-i-1], aList[i]
    return aList

#----------------------------------------------------------
# Κλήση συνάρτησης
x = orderBoolean(aList)
print x
#----------------------------------------------------------